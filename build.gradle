plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '2.0.20-Beta1'
    id 'org.jetbrains.kotlin.plugin.allopen' version '2.0.20-Beta1'
    id 'org.jetbrains.kotlin.plugin.noarg' version '2.0.20-Beta1'
    id 'war'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.11.0-M2'
}

sourceCompatibility = '19'
targetCompatibility = '19'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

[compileKotlin, compileTestKotlin].forEach {
    it.kotlinOptions {
        jvmTarget = '19'
    }
}

allOpen {
    annotation('jakarta.ws.rs.Path')
    annotation('jakarta.persistence.Entity')
    annotation('jakarta.persistence.Embeddable')
    annotation('jakarta.persistence.MappedSuperclass')
}

noArg {
    annotation('jakarta.persistence.Entity')
    annotation('jakarta.persistence.Embeddable')
    annotation('jakarta.persistence.MappedSuperclass')
}

dependencies {
    compileOnly('jakarta.servlet:jakarta.servlet-api:6.1.0')
    implementation('org.glassfish.jersey.containers:jersey-container-servlet:4.0.0-M1')
    implementation('org.glassfish.jersey.media:jersey-media-json-jackson:4.0.0-M1')
    implementation('org.glassfish.jersey.inject:jersey-hk2:4.0.0-M1')
    implementation('org.glassfish.jersey.core:jersey-client:4.0.0-M1')
    implementation('org.hibernate:hibernate-core:7.0.0.Alpha3')
    implementation('org.glassfish.jaxb:jaxb-runtime:4.0.5')
    implementation('org.hibernate.validator:hibernate-validator:8.0.1.Final')

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}